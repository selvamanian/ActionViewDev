<?php

/**
 * This is the model base class for the table "tbl_company".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Company".
 *
 * Columns in table "tbl_company" available as properties of the model,
 * followed by relations of table "tbl_company" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $notes
 * @property string $telephone
 * @property string $fax
 * @property string $address1
 * @property string $address2
 * @property string $address3
 * @property string $address4
 * @property string $address5
 * @property string $postcode
 * @property string $region
 * @property string $website
 * @property string $create_time
 * @property integer $create_user_id
 * @property string $update_time
 * @property integer $update_user_id
 *
 * @property User $updateUser
 * @property User $createUser
 * @property Attribute[] $tblAttributes
 * @property Contact[] $contacts
 */
abstract class BaseCompany extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_company';
	}

	/**
	 * Behaviors
	 * @return array
	 */
	public function behaviors()
	{
		return array(
			'BlameableBehavior' => array(
			'class' => 'root.common.extensions.behaviors.BlameableBehavior.BlameableBehavior'
			),
		);
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Company|Companies', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('create_user_id, update_user_id', 'numerical', 'integerOnly'=>true),
			array('name, telephone, fax, address1, address2, address3, address4, address5, postcode, region, website', 'length', 'max'=>255),
			array('notes, create_time, update_time', 'safe'),
			array('notes, telephone, fax, address1, address2, address3, address4, address5, postcode, region, website, create_time, create_user_id, update_time, update_user_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, notes, telephone, fax, address1, address2, address3, address4, address5, postcode, region, website, create_time, create_user_id, update_time, update_user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'updateUser' => array(self::BELONGS_TO, 'User', 'update_user_id'),
			'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
			'tblAttributes' => array(self::MANY_MANY, 'Attribute', 'tbl_company_attribute_assignment(company_id, attribute_id)'),
			'contacts' => array(self::HAS_MANY, 'Contact', 'company_id'),
		);
	}

	public function pivotModels() {
		return array(
			'tblAttributes' => 'CompanyAttributeAssignment',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'notes' => Yii::t('app', 'Notes'),
			'telephone' => Yii::t('app', 'Telephone'),
			'fax' => Yii::t('app', 'Fax'),
			'address1' => Yii::t('app', 'Address1'),
			'address2' => Yii::t('app', 'Address2'),
			'address3' => Yii::t('app', 'Address3'),
			'address4' => Yii::t('app', 'Address4'),
			'address5' => Yii::t('app', 'Address5'),
			'postcode' => Yii::t('app', 'Postcode'),
			'region' => Yii::t('app', 'Region'),
			'website' => Yii::t('app', 'Website'),
			'create_time' => Yii::t('app', 'Create Time'),
			'create_user_id' => null,
			'update_time' => Yii::t('app', 'Update Time'),
			'update_user_id' => null,
			'updateUser' => null,
			'createUser' => null,
			'tblAttributes' => null,
			'contacts' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('notes', $this->notes, true);
		$criteria->compare('telephone', $this->telephone, true);
		$criteria->compare('fax', $this->fax, true);
		$criteria->compare('address1', $this->address1, true);
		$criteria->compare('address2', $this->address2, true);
		$criteria->compare('address3', $this->address3, true);
		$criteria->compare('address4', $this->address4, true);
		$criteria->compare('address5', $this->address5, true);
		$criteria->compare('postcode', $this->postcode, true);
		$criteria->compare('region', $this->region, true);
		$criteria->compare('website', $this->website, true);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('create_user_id', $this->create_user_id);
		$criteria->compare('update_time', $this->update_time, true);
		$criteria->compare('update_user_id', $this->update_user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}